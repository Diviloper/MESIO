paths =[
    [3, 6, 5],
    [3, 7, 14, 6, 5],
    [3, 2, 1, 4, 9, 8],
    [3, 6, 5, 10, 9, 8],
    [3, 2, 1, 4, 9, 12],
    [3, 6, 5, 10, 13, 12],
    [3, 6, 5, 10, 13],
    [3, 2, 1, 4, 9, 10, 13],
    [3, 6, 14],
    [3, 7, 14],
    [3, 6, 5, 10, 13, 17],
    [3, 6, 14, 18, 17],
    [3, 6, 14, 18],
    [3, 7, 14, 18],
    [3, 7, 19],
    [3, 6, 14, 18, 21, 24, 19],
    [3, 6, 14, 18, 21],
    [3, 7, 19, 24, 21],
    [3, 7, 19, 24, 23],
    [3, 6, 14, 18, 21, 20, 23],

    [11, 12, 13, 14, 6, 5],
    [11, 8, 9, 4, 1, 2, 3, 6, 5],
    [11, 8],
    [11, 12, 9, 8],
    [11, 12],
    [11, 8, 9, 12],
    [11, 12, 13],
    [11, 8, 9, 10, 13],
    [11, 12, 13, 14],
    [11, 8, 9, 4, 1, 2, 3, 6, 14],
    [11, 12, 15, 16, 17],
    [11, 22, 16, 17],
    [11, 22, 16, 17, 18],
    [11, 12, 13, 14, 18],
    [11, 22, 23, 24, 19],
    [11, 12, 13, 14, 18, 21, 24, 19],
    [11, 22, 23, 24, 21],
    [11, 22, 20, 21],
    [11, 22, 23],
    [11, 12, 13, 17, 20, 23]
]


# Convert paths from node sequence to list of arcs:
i = False
with open("paths.run", "w") as f:
    for path in paths:
        arcs = [(path[i], path[i + 1]) for i in range(len(path) - 1)]
        suma = ' + '.join([f'(C[{o},{d}] + DELTA * tf[{o},{d}])' for o, d in arcs])	
        string_path = " -> ".join(str(p) for p in path)
        f.write(f'printf "Cost of Path from {path[0]} to {path[-1]} #{int(i) + 1}: %f\\n", {suma};\n')
        f.write(f'printf "{path[0]},{path[-1]},{string_path},%f,false\\n", {suma} > "results/paths.csv";\n')
        i = not i



